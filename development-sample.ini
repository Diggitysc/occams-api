;
; development.ini
; Master OCCAMS configuration
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SHARED SETTINGS
; These settings are shared amongst the OCCAMS suite but unique per-cohort.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[DEFAULT]

ENV = /opt/occams/env

ORG_NAME =
ORG_TITLE =

; Lets the account application handle the logout
LOGOUT_URL = /accounts/logout

; Additional applications in the OCCAMS suite
APPS_CONF =

; Application database
DB_URL =

ROSTER_URL =

; Redis database (for worker queue comminications)
REDIS_URL =

; Unified logging configuration for gunicorn (since it requires external file)
LOGGING_CONF = %(here)s/development.ini

; NOTE: Keep authorization and session secrets separate for security purposes
SESSION_SECRET = SESSION_SPECIFIC_TOKEN
SESSION_TIMEOUT = 3600

WHO_CONF = %(here)s/who.ini

; LDAP groups to OCCAMS groups mappings
AUTH_GROUPS =
;     cohort-group = group
;     cohort-site-group = site:group


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; The following settings are meant to be rarely touched.
;
; Here be dragons.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SCRIPT PATHS
; We "mount" the application in a virtual path so that they can
; be run in the same server port .
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[composite:main]
use = egg:Paste#urlmap
/accounts= occams.accounts
/forms = occams.forms
/studies = occams.studies

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; REPOZE WHO MIDDLEWARE
; Common configurations for repoze.who, applications should use this as a
; configuration filter (i.e. "filter-with = who")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[filter:who]
use = egg:repoze.who#config
config_file = %(WHO_CONF)s

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ACCOUNTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[app:occams.accounts]
use = egg:occams.accounts

filter-with = who

; Pyramid settings
; http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

pyramid.includes =
    pyramid_debugtoolbar

; By default, the toolbar only appears for clients from IP addresses
; '127.0.0.1' and '::1'.
debugtoolbar.hosts = 127.0.0.1 ::1


; Organization token (pirc, cctg, mhealth, etc.)
app.org.name = %(ORG_NAME)s
; Organization human-readble title (PIRC, CCTG, mHealth, etc)
app.org.title = %(ORG_TITLE)s
; SQLAlchemy URL to the primary application database
app.db.url = %(DB_URL)s
; URL to accounts application logout view
accounts.logout_url = %(LOGOUT_URL)s
; Permissions group mappings
auth.groups = %(AUTH_GROUPS)s
; External application links JSON configuration file. (Optional)
suite.file = %(APPS_CONF)s

; webassets
; https://github.com/sontek/pyramid_webassets#configuration
; Debug mode (false = compress)
webassets.debug = true
; Source assets path
webassets.base_dir = %(ENV)s/src/occams.accounts/src/occams/accounts/static
; Web path to the static files (add beggining slash)
webassets.base_url = /accounts/static

; Authentication
; http://docs.pylonsproject.org/projects/pyramid_who/en/latest/#configuration-options
who.config_file = %(WHO_CONF)s
who.identifier_id = plugins:auth_tkt
who.callback = occams.accounts.security.occams_groupfinder

; Browser sessions
; Share redis server while avoiding collisions with a prefix
; http://pyramid-redis-sessions.readthedocs.org/en/latest/gettingstarted.html#configuration
redis.sessions.secret = %(SESSION_SECRET)s
redis.sessions.url = %(REDIS_URL)s
redis.sessions.timeout = %(SESSION_TIMEOUT)s
redis.sessions.prefix = occams.accounts-sessions:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; FORMS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[app:occams.forms]
use = egg:occams.forms

filter-with = who

; Pyramid settings
; http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

pyramid.includes =
    pyramid_debugtoolbar

; By default, the toolbar only appears for clients from IP addresses
; '127.0.0.1' and '::1'.
debugtoolbar.hosts = 127.0.0.1 ::1

; Organization token (pirc, cctg, mhealth, etc.)
app.org.name = %(ORG_NAME)s
; Organization human-readble title (PIRC, CCTG, mHealth, etc)
app.org.title = %(ORG_TITLE)s
; SQLAlchemy URL to the primary application database
app.db.url = %(DB_URL)s
; URL to accounts application logout view
accounts.logout_url = %(LOGOUT_URL)s
; Permissions group mappings
auth.groups = %(AUTH_GROUPS)s
; External application links JSON configuration file. (Optional)
suite.file = %(APPS_CONF)s

; webassets
; https://github.com/sontek/pyramid_webassets#configuration
; Debug mode (false = compress)
webassets.debug = true
; Source assets path
webassets.base_dir = %(ENV)s/src/occams.forms/src/occams/forms/static
; Web path to the static files (add beggining slash)
webassets.base_url = /forms/static

; Authentication
; http://docs.pylonsproject.org/projects/pyramid_who/en/latest/#configuration-options
who.config_file = %(WHO_CONF)s
who.identifier_id = plugins:auth_tkt
who.callback = occams.accounts.security.occams_groupfinder

; Browser sessions
; Share redis server while avoiding collisions with a prefix
; http://pyramid-redis-sessions.readthedocs.org/en/latest/gettingstarted.html#configuration
redis.sessions.secret = %(SESSION_SECRET)s
redis.sessions.url = %(REDIS_URL)s
redis.sessions.timeout = %(SESSION_TIMEOUT)s
redis.sessions.prefix = occams.forms-sessions:


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; STUDIES APPLICATION
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[app:occams.studies]
use = egg:occams.studies

filter-with = who

; Pyramid settings
; http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

pyramid.includes =
    pyramid_debugtoolbar

; By default, the toolbar only appears for clients from IP addresses
; '127.0.0.1' and '::1'.
debugtoolbar.hosts = 127.0.0.1 ::1

; Organization token (pirc, cctg, mhealth, etc.)
app.org.name = %(ORG_NAME)s
; Organization human-readble title (PIRC, CCTG, mHealth, etc)
app.org.title = %(ORG_TITLE)s
; SQLAlchemy URL to the primary application database
app.db.url = %(DB_URL)s
; URL to accounts application logout view
accounts.logout_url = %(LOGOUT_URL)s
; Permissions group mappings
auth.groups = %(AUTH_GROUPS)s
; External application links JSON configuration file. (Optional)
suite.file = %(APPS_CONF)s
; PID plugin module
pid.package = occams.roster
; PID SQLAlchemy URL
pid.db.url = %(ROSTER_URL)s
; Directory where BLOB files will reside
app.blob.dir = %(here)s/../var/blobs/
; Directory where export files are stored
app.export.dir = %(here)s/../var/exports/
; Blame-user for exports
app.export.user = celery@localhost
; Number of exports a user is allowed to have (blank = infinite)
;app.export.limit =
; Number of days a user is allowed to keep an export archive (blank = infinite)
;app.export.expire =

; redis (for regular access)
redis.url = %(REDIS_URL)s

; Celery settings
; Thse are custom celery options since celery only accepts modules as configuration
; Comununiation between worker and web application [REQUIRED]
celery.broker.url = %(REDIS_URL)s
; Status of jobs will be stored here [REQUIRED]
celery.backend.url = %(REDIS_URL)s

; webassets
; https://github.com/sontek/pyramid_webassets#configuration
; Debug mode (false = compress)
webassets.debug = true
; Source assets path
webassets.base_dir = %(ENV)s/src/occams.studies/src/occams/studies/static
; Web path to the static files (add beggining slash)
webassets.base_url = /studies/static

; Authentication
; http://docs.pylonsproject.org/projects/pyramid_who/en/latest/#configuration-options
who.config_file = %(WHO_CONF)s
who.identifier_id = plugins:auth_tkt
who.callback = occams.accounts.security.occams_groupfinder

; Browser sessions
; Share redis server while avoiding collisions with a prefix
; http://pyramid-redis-sessions.readthedocs.org/en/latest/gettingstarted.html#configuration
redis.sessions.secret = %(SESSION_SECRET)s
redis.sessions.url = %(REDIS_URL)s
redis.sessions.timeout = %(SESSION_TIMEOUT)s
redis.sessions.prefix = occams.studies-sessions:


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; WSGI SERVER CONFIGURATION
;
; https://gevent-socketio.readthedocs.org/en/latest/server_integration.html#gunicorn
;
; <rant>
; There is absolutely no way to specify custom settings in gunicorn. They must be
; done through the "env" setting, but then, even then, gunicorn cannot process
; multiple "env" settings in a config file. They must be passed in the command line.
;
; If you entend on using the application inside of a virtual path, YOU NEED
; to override the "resource" property via the "env" setting in the command line.
;
; Also, there is no way to use the same file as a logging configuration, so you
; need to rememeber to explicitly set the filename here
; </rant>
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[server:main]
use = egg:gunicorn#main
; Had to override gevent-socketio's to access gunicorn's crappy config system
worker_class = occams.studies.sgunicorn.GeventSocketIOWorker
host = 0.0.0.0
port = 3001
errorlog = -
logconfig = %(LOGGING_CONF)s
loglevel = INFO
; Note, for resource DO NOT ADD beginning slash
; --env resource=studies/socket.io
; --env policy_server=False

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; LOGGING CONFIGURATION
; http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[loggers]
keys = root, sqlalchemy, alembic, occams.studies, occams.forms, occams.accounts

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_occams.accounts]
level = DEBUG
handlers =
qualname = occams.accounts

[logger_occams.studies]
level = DEBUG
handlers =
qualname = occams.forms

[logger_occams.forms]
level = DEBUG
handlers =
qualname = occams.forms

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
; "level = INFO" logs SQL queries.
; "level = DEBUG" logs SQL queries and results.
; "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
