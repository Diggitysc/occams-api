################################################################################
# sample.ini
#
# Master OCCAMS configuration
#
# Please copy to your own project's directory. Naming convention is as follows:
#   development.ini - development environment
#   production.ini - produciton environment
#
# Available global variables:
#   __file__: the current file
#   here: the current directory of this config file
################################################################################

################################################################################
# APP
################################################################################

[app:main]

use = egg:occams

# Use paster's filtering to filter repoze.who authentication middleware
filter-with = who

#
# pyramid
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
#

# Pyramid debug settings, set all to "false" in production
pyramid.reload_templates = true
pyramid.debug_authorization = true
pyramid.debug_notfound = true
pyramid.debug_routematch = true

# Set to your preferred region's locale
pyramid.default_locale_name = en

# Pyramid plug-ins (loaded first)
# This is typically used to enhance OCCAMS behavior, as OCCAMS includes
# required plugins on startup.
# For example, in development, you'll want to use "pyramid_debugtoolbar".
# But in production, you'll want to use "pyramid_exclog
pyramid.includes =
  pyramid_debugtoolbar
#  pyramid_exclog

#
# pyramid_exclog (production)
# http://docs.pylonsproject.org/projects/pyramid-exclog/en/latest/
#

# Add full environ and param attributes in error log
# exclog.extra_info = true

#
# pyramid_debugtoolbar (development)
# http://docs.pylonsproject.org/projects/pyramid-debugtoolbar/en/latest/#settings
#

# IP address filters for which users can see the debugtoolbar
debugtoolbar.hosts = 127.0.0.1 ::1

#
# pyramid_redis
# https://github.com/thruflo/pyramid_redis/blob/master/README.md
#

redis.url = redis://localhost:6379/0

#
# pyramid_webassets
# https://github.com/sontek/pyramid_webassets#configuration
#

# Controls minification of static assets
webassets.debug = true
# "webassets.debug = false" minifies all assets in production

# Controls minitoring of assets for changes during development
webassets.auto_build = true
# "webassets.auto_build = false" stops monitoring changes in production

#
# pyramid_who
# http://docs.pylonsproject.org/projects/pyramid-who/en/latest/
#

# Loads the repoze.who authentication configuration file
who.config_file = %(__file__)s

# Specific which entry point to use for identifying the current user
who.identifier_id = plugins:auth_tkt

#
# pyramid_redissession
# http://pyramid-redis-sessions.readthedocs.org/en/latest/gettingstarted.html#configuration
#

redis.sessions.url = %(redis.url)s

# Data encoding secret (do not use the same as authorization)
redis.sessions.secret = sekrit

# Avoid collisions by speficing a prefix
redis.sessions.prefix = occams-session:

# *WARNING* Also update repoze.who timeout with this value
redis.sessions.timeout = 36000

#
# occams
# https://github.com/younglabs/occams#configuration
#

# Enabled applications
occams.apps =
  occams_datastore
  occams_accounts
  occams_forms
  occams_studies
  occams_roster
#  occams_lims

# Organization acronym (pirc, cctg, mHealth, addis, aegis, ...)
occams.org.name = myorg

# Organization human-readble title (PIRC, CCTG, mHealth, ADDIS, AEGIS, ...)
occams.org.title = My Organization

# SQLAlchemy URL for application
# It is recommended you use a limited-privilege user
occams.db.url = postgresql://user:pass@/myorg

# Permissions group mappings (LDAP -> OCCAMS format)
occams.groups =
#     myorg-group = group
#     myorg-site-group = site:group

# Comununiation between worker and web application [REQUIRED]
celery.broker.url = %(redis.url)s

# Status of jobs will be stored here [REQUIRED]
celery.backend.url = %(redis.url)s

# Blame user for celery database connection
celery.blame = celery@localhost

celery.include =
  occams_studies.tasks

celery.beat =
  make-codebook-hourly

celery.beat.make-codebook-hourly.task = make_codebook
celery.beat.make-codebook-hourly.schedule = timedelta
celery.beat.make-codebook-hourly.schedule.hours = 1

#
# occams_studies
# https://github.com/younglabs/occams_studies#configuration
#

# PID plugin module
studies.pid.package = occams_roster

# PID SQLAlchemy URL
roster.db.url = postgresql://user:pass@/roster

# Directory where BLOB files will reside
studies.blob.dir = /path/to/blobs/

# Directory where export files are stored
studies.export.dir = /path/to/exports

# Number of exports a user is allowed to have (blank = infinite)
#studies.export.limit =

# Number of days a user is allowed to keep an export archive (blank = infinite)
#studies.export.expire =

studies.export.plans =
  occams_studies.exports.pid.PidPlan
  occams_studies.exports.enrollment.EnrollmentPlan
  occams_studies.exports.visit.VisitPlan
  occams_studies.exports.schema.SchemaPlan.list_all
#  occams_lims.exports.lab.LabPlan
#  occams_studies.exports.calllog.CallLogPlan


################################################################################
# ALEMBIC
# http://alembic.readthedocs.org/en/latest/tutorial.html#editing-the-ini-file
#################################################################################

[alembic]

# Path to migration setup
script_location = occams:alembic/

# SQLAlchemy connection URL
# It is highly advised that this user not be the same as the application user.
# This user will create tables and assign appropriate permissions, of which
# the application user should not be able to change.
sqlalchemy.url = postgresql://user:pass@/myorg

# Application-specific upgrade script directories
version_locations = occams_datastore:versions occams_studies:versions occams_lims:versions occams_imports:versions

# Inevitably data changes will need to be made, this is the user to "blame"
blame = bitcore@ucsd.edu


################################################################################
# WSGI SERVER CONFIGURATION
# http://docs.gunicorn.org/en/latest/configure.html#configuration-file
################################################################################

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 3000
worker_class = gevent
logconfig = %(__file__)s
errorlog = -

loglevel = INFO
# "loglevel = WARN" in production environment

# Restarts WSGI server when python changes are made
reload = True
# "reload = False" in production environment

debug = True
# "debug = False" in production environment


################################################################################
# REPOZE WHO - PASTER FILTER
# https://repozewho.readthedocs.org/en/latest/configuration.html#declarative-configuration
################################################################################

[filter:who]
use = egg:repoze.who#config
config_file = %(__file__)s


################################################################################
# REPOZE WHO v2 PLUGIN/MIDDLEWARE CONFIGURATIONS
#
# This file is pre-configured for ldap, but you can use whatever v2 plugin.
#
# The LDAP plugin used is ``who_ldap``:
# https://github.com/m-martinez/who_ldap
#
# More options at:
# http://docs.repoze.org/who/2.0/configuration.html#declarative-configuration
################################################################################

[general]
request_classifier = repoze.who.classifiers:default_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider
remote_user_key = REMOTE_USER

[identifiers]
plugins =
  auth_tkt

[authenticators]
plugins =
  auth_tkt
  ldapusers

[mdproviders]
plugins =
  ldapproperties
  ldapgroups

[challengers]
plugins =
  redirector;browser

[plugin:redirector]
use = repoze.who.plugins.redirector:make_plugin
login_url = /accounts/login
came_from_param = referrer

[plugin:auth_tkt]
# identification and authentication
use = repoze.who.plugins.auth_tkt:make_plugin
secret = AUTH_SPECIFIC_TOKEN
cookie_name = auth_tkt
# Switch to true on production systems
secure = False
include_ip = True
# *WARNING* Use the same value as pyramid session timeout
timeout = 3600
# Rule of thumb, set to a tenth of the timetout (per pyramid docs)
reissue_time = 360

[plugin:ldapusers]
# authentication
use = who_ldap:LDAPSearchAuthenticatorPlugin
url =
bind_dn =
bind_pass =
base_dn =
naming_attribute =
search_scope = subtree
returned_id = login

[plugin:ldapproperties]
# mdproviders
use = who_ldap:LDAPAttributesPlugin
url =
bind_dn =
bind_pass =
name = properties
attributes = cn=first_name,sn=last_name,mail=email
flatten = True

[plugin:ldapgroups]
# mdproviders
use = who_ldap:LDAPGroupsPlugin
url =
bind_dn =
bind_pass =
base_dn =
name = groups
filterstr = (&(objectClass=groupOfNames)(member=%%(dn)s))
returned_id = cn

################################################################################
# LOGGING CONFIGURATION
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
################################################################################
[loggers]
keys = root, sqlalchemy, alembic, webassets, occams
# "keys = root, sqlalchemy, alembic, webassets, occams, exc_logger" (production)

[handlers]
keys = console
# "keys = generic, exc_handler" (production)

[formatters]
keys = generic
# "keys = generic, exc_formatter" (production)

[logger_root]
level = INFO
# "level = WARN" (production)
handlers = console

[logger_occams]
level = DEBUG
# "level = WARN" (production)
handlers =
qualname = occams

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_webassets]
level = INFO
handlers =
qualname = webassets

[logger_sqlalchemy]
level = INFO
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# Production exception handling: send email to developers
# If you use these settings, you must have  pyramid_exclog enabled
#[logger_exc_logger]
#level = ERROR
#handlers = exc_handler
#qualname = exc_logger

#[handler_exc_handler]
#class = handlers.SMTPHandler
#args = (('localhost', 25), 'myorg@localhost', ['bitcore@ucsd.edu'], 'OCCAMS Exception')
#level = ERROR
#formatter = exc_formatter

#[formatter_exc_formatter]
#format = %(asctime)s %(message)s
