;;;
; Composite application so we can use the occams suite (clinica/form/lab/etc)
;;;
[composite:main]
use = egg:Paste#urlmap
/accounts = occams.accounts


;;;
; app configuration
; http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
;;;

[app:occams.accounts]
use = egg:occams.accounts

;
; Pyramid settings
;
pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

;
; Application settings (app.*)
;

; SQLAlchemy URL to the primary application database
app.db.url =

;
; Web Assets
; https://github.com/sontek/pyramid_webassets#configuration
;

; Assets directoy
webassets.base_dir = <PATH>/occams.accounts/src/occams/accounts/static

; Web path to the satic files (add beggining slash)
webassets.base_url = /static
;webassets.base_url = /accounts//static

; Enable compression
webassets.debug = false

; Rebuild on save
webassets.auto_build = false

;
; Authentication
; http://docs.pylonsproject.org/projects/pyramid_who/en/latest/#configuration-options
;

who.config_file =
who.identifier_id = plugins:auth_tkt
who.callback = occams.accounts.security.occams_groupfinder

;
; Eternal application links
; This is the list that appears in the top right.
; If not specified, the icon will not be rendered.
;
;suite.file = %(here)s/apps.json

;
; Browser sessions
; http://pyramid-redis-sessions.readthedocs.org/en/latest/gettingstarted.html#configuration
;

redis.sessions.secret = sekrit
redis.sessions.url =
; Useful if multiple applications are using the same redis database
redis.sessions.prefix = occams.accounts-sessions:


;;;
; wsgi server configuration
; https://gevent-socketio.readthedocs.org/en/latest/server_integration.html#gunicorn
;
; <rant>
; There is absolutely no way to specify custom settings in gunicorn. They must be
; done through the "env" setting, but then, even then, gunicorn cannot process
; multiple "env" settings in a config file. They must be passed in the command line.
;
; If you entend on using the application inside of a virtual path, YOU NEED
; to overried the "resource" property via the "env" setting in the command line.
;
; Also, there is no way to use the same file as a logging configuration, so you
; need to rememeber to explicitly set the filename here
; </rant>
;;;

[server:main]
use = egg:gunicorn#main
; Had to override gevent-socketio's to access gunicorn's crappy config system
worker_class = occams.accounts.sgunicorn.GeventSocketIOWorker
host = 0.0.0.0
port = 3000
debug = True
logconfig = %(here)s/development.ini
; Note, for resource DO NOT ADD beginning slash
; --env resource=accounts/socket.io
; --env policy_server=False


;;
; logging configuration
; http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
;;;

[loggers]
keys = root, occams.accounts, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_occams.accounts]
level = WARN
handlers =
qualname = occams.accounts

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
; "level = INFO" logs SQL queries.
; "level = DEBUG" logs SQL queries and results.
; "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
